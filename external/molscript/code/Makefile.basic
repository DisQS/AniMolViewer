# Makefile
#
# MolScript v2.1.2, basic implementation.
#
# This Makefile is for the most basic MolScript implementation.
# It should compile on any computer system having an ANSI C compliant
# compiler and system. No external libraries or systems apart from
# those present in the clib directory (which is part of the MolScript
# distribution) are needed.
#
# If you wish to compile a more complete MolScript implementation,
# then look at the Makefile.complete file instead.
#
# See the documentation for more information.
#
# Copyright (C) 1997-1998 Per Kraulis
#   1-Dec-1996  first attempts
#  13-Sep-1997  rearranged optional implementations
#  22-Oct-1997  modified for distribution
#  19-Nov-1997  checked for distribution
#  15-Aug-1998  reorganized for v2.1
#   1-Nov-2014  rearranged directories for GitHub

# Executables
MOLSCRIPT = ../molscript
MOLAUTO   = ../molauto

#PS_SUPPORT = 1
ifdef PS_SUPPORT
  PSOBJ = postscript.o
  PSFLAG = -DPS_SUPPORT
endif

#RASTER3D_SUPPORT = 1
ifdef RASTER3D_SUPPORT
  RASTER3DOBJ = raster3d.o
  RASTER3DFLAG = -DRASTER3D_SUPPORT
endif

#VRML_SUPPORT = 1
ifdef VRML_SUPPORT
  VRMLOBJ = vrml.o
  VRMLFLAG = -DVRML_SUPPORT
endif

#REGEX_SUPPORT = 1
ifdef REGEX_SUPPORT
  REGEXOBJ = regex.o
  REGEXFLAG = -DREGEX_SUPPORT
endif

VERTEX_SUPPORT = 1
ifdef VERTEX_SUPPORT
  VERTEXOBJ = vertex.o
  VERTEXFLAG = -DVERTEX_SUPPORT
endif

OPTFLAGS = $(PSFLAG) $(RASTER3DFLAG) $(VRMLFLAG) $(REGEXFLAG) $(VERTEXFLAG)

# Command execution shell.
SHELL = /bin/sh

# GNU's cc compiler.
CC = gcc
# optimization flags:
COPT = -O
# correctness flags:
#CCHECK = -DNDEBUG

# General cc compile flags.
CFLAGS = $(COPT) $(CCHECK) $(OPTFLAGS) -Iclib

# GNU's bison; required instead of the ordinary yacc.
YACC = bison
YFLAGS = -d
YLIB = 

#------------------------------------------------------------
OBJ = molscript.tab.o global.o lex.o col.o select.o \
      state.o graphics.o segment.o coord.o xform.o \
      molscript_prog.o

ALLOBJ = $(OBJ) $(PSOBJ) $(RASTER3DOBJ) $(VRMLOBJ) ${REGEXOBJ} $(VERTEXOBJ)

#------------------------------------------------------------
all: $(MOLSCRIPT) $(MOLAUTO)

#------------------------------------------------------------
clean:
	(rm -f $(MOLSCRIPT) $(MOLAUTO) *.o core *~)
	(cd clib; make clean)

#------------------------------------------------------------
$(MOLSCRIPT): $(ALLOBJ) clib/clib.a
	$(CC) $(OPT) $(OPTFLAGS) -o $(MOLSCRIPT) $(ALLOBJ) $(YLIB) clib/clib.a -lm

molscript.tab.o: molscript.tab.c molscript.tab.h

molscript.tab.c molscript.tab.h: molscript.y 
	$(YACC) $(YFLAGS) molscript.y

molscript_prog.o: molscript_prog.c

global.o: global.c global.h lex.h state.h graphics.h xform.h \
	  postscript.h raster3d.h vrml.h vertex.h

lex.o: lex.c lex.h global.h molscript.tab.h

col.o: col.c col.h global.h lex.h state.h

select.o: select.c select.h coord.h global.h state.h lex.h

state.o: state.c state.h col.h global.h select.h

graphics.o: graphics.c graphics.h coord.h state.h global.h lex.h \
            select.h xform.h segment.h postscript.h raster3d.h vrml.h

segment.o: segment.c segment.h

coord.o: coord.c coord.h global.h lex.h select.h

xform.o: xform.c xform.h global.h select.h

postscript.o: postscript.c postscript.h coord.h global.h \
              graphics.h segment.h state.h

raster3d.o: raster3d.c raster3d.h coord.h global.h graphics.h segment.h state.h

vrml.o: vrml.c vrml.h col.h coord.h global.h graphics.h segment.h state.h

vertex.o: vertex.c vertex.h

regex.o: other/regex.c
	$(CC) $(CFLAGS) -c -o ./regex.o other/regex.c

#------------------------------------------------------------
$(MOLAUTO): molauto.o molauto_prog.o clib/clib.a
	$(CC) -o $(MOLAUTO) molauto.o molauto_prog.o clib/clib.a -lm

molauto.o: molauto.c
molauto_prog.o: molauto_prog.c

#------------------------------------------------------------
clib/clib.a:
	cd clib; make clib.a CFLAGS="-I. $(CFLAGS)"
